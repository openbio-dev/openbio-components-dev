/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from './stencil.core';


export namespace Components {
  interface LoaderComponent {
    'enabled': boolean;
  }
  interface NotificationComponent {
    'notificationType': string;
    'text': string;
  }
  interface OpenbioOmaFace {
    'action': 'REGISTER' | 'VERIFY';
    'allowLivenessNoncompliance': boolean;
    'allowNoncomplianceRecordUpdate': boolean;
    'callback': Function;
    'cameraHeight': number;
    'cameraWidth': number;
    'containerBackgroundColor': string;
    'headerTitle': string;
    'livenessMin': any;
    'locale': string;
    'primaryColor': string;
    'projectId': string;
    'recordId': string;
    'requestKey': string;
    'showHeader': boolean;
    'textColor': string;
    'token': string;
  }
}

declare global {


  interface HTMLLoaderComponentElement extends Components.LoaderComponent, HTMLStencilElement {}
  var HTMLLoaderComponentElement: {
    prototype: HTMLLoaderComponentElement;
    new (): HTMLLoaderComponentElement;
  };

  interface HTMLNotificationComponentElement extends Components.NotificationComponent, HTMLStencilElement {}
  var HTMLNotificationComponentElement: {
    prototype: HTMLNotificationComponentElement;
    new (): HTMLNotificationComponentElement;
  };

  interface HTMLOpenbioOmaFaceElement extends Components.OpenbioOmaFace, HTMLStencilElement {}
  var HTMLOpenbioOmaFaceElement: {
    prototype: HTMLOpenbioOmaFaceElement;
    new (): HTMLOpenbioOmaFaceElement;
  };
  interface HTMLElementTagNameMap {
    'loader-component': HTMLLoaderComponentElement;
    'notification-component': HTMLNotificationComponentElement;
    'openbio-oma-face': HTMLOpenbioOmaFaceElement;
  }
}

declare namespace LocalJSX {
  interface LoaderComponent extends JSXBase.HTMLAttributes<HTMLLoaderComponentElement> {
    'enabled'?: boolean;
  }
  interface NotificationComponent extends JSXBase.HTMLAttributes<HTMLNotificationComponentElement> {
    'notificationType'?: string;
    'text'?: string;
  }
  interface OpenbioOmaFace extends JSXBase.HTMLAttributes<HTMLOpenbioOmaFaceElement> {
    'action'?: 'REGISTER' | 'VERIFY';
    'allowLivenessNoncompliance'?: boolean;
    'allowNoncomplianceRecordUpdate'?: boolean;
    'callback'?: Function;
    'cameraHeight'?: number;
    'cameraWidth'?: number;
    'containerBackgroundColor'?: string;
    'headerTitle'?: string;
    'livenessMin'?: any;
    'locale'?: string;
    'primaryColor'?: string;
    'projectId'?: string;
    'recordId'?: string;
    'requestKey'?: string;
    'showHeader'?: boolean;
    'textColor'?: string;
    'token'?: string;
  }

  interface IntrinsicElements {
    'loader-component': LoaderComponent;
    'notification-component': NotificationComponent;
    'openbio-oma-face': OpenbioOmaFace;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


